// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WYMS_Zaliczenie_API.Data;

#nullable disable

namespace WYMS_Zaliczenie_API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateFrom")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTo")
                        .HasColumnType("TEXT");

                    b.Property<double>("PaymentValue")
                        .HasColumnType("REAL");

                    b.Property<int>("Shops_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Warehouses_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("PaymentId");

                    b.HasIndex("Shops_ID");

                    b.HasIndex("Warehouses_ID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Warehouses_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.HasIndex("Warehouses_ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DateFrom")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DateTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Warehouses_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ScheduleId");

                    b.HasIndex("Warehouses_ID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Shop", b =>
                {
                    b.Property<int>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Schedules_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShopId");

                    b.HasIndex("Schedules_ID");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Capacity")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Schedules_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Warehouses_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("VehicleId");

                    b.HasIndex("Schedules_ID");

                    b.HasIndex("Warehouses_ID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surface")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Vehicles_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Warehouses_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("WorkerId");

                    b.HasIndex("Vehicles_ID");

                    b.HasIndex("Warehouses_ID");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Payment", b =>
                {
                    b.HasOne("WYMS_Zaliczenie_API.Entities.Shop", "Shop")
                        .WithMany("Payments")
                        .HasForeignKey("Shops_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WYMS_Zaliczenie_API.Entities.Warehouse", "Warehouse")
                        .WithMany("Payments")
                        .HasForeignKey("Warehouses_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shop");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Product", b =>
                {
                    b.HasOne("WYMS_Zaliczenie_API.Entities.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("Warehouses_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Schedule", b =>
                {
                    b.HasOne("WYMS_Zaliczenie_API.Entities.Warehouse", "Warehouse")
                        .WithMany("Schedules")
                        .HasForeignKey("Warehouses_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Shop", b =>
                {
                    b.HasOne("WYMS_Zaliczenie_API.Entities.Schedule", "Schedule")
                        .WithMany("Shops")
                        .HasForeignKey("Schedules_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Vehicle", b =>
                {
                    b.HasOne("WYMS_Zaliczenie_API.Entities.Schedule", "Schedule")
                        .WithMany("Vehicles")
                        .HasForeignKey("Schedules_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WYMS_Zaliczenie_API.Entities.Warehouse", "Warehouse")
                        .WithMany("Vehicles")
                        .HasForeignKey("Warehouses_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Worker", b =>
                {
                    b.HasOne("WYMS_Zaliczenie_API.Entities.Vehicle", "Vehicle")
                        .WithMany("Workers")
                        .HasForeignKey("Vehicles_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WYMS_Zaliczenie_API.Entities.Warehouse", "Warehouse")
                        .WithMany("Workers")
                        .HasForeignKey("Warehouses_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Schedule", b =>
                {
                    b.Navigation("Shops");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Shop", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Vehicle", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("WYMS_Zaliczenie_API.Entities.Warehouse", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Products");

                    b.Navigation("Schedules");

                    b.Navigation("Vehicles");

                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
